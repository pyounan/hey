stages:
  - build_test
  - push_test
  - build_staging
  - push_staging
  - build_manage
  - push_manage

build_test:
  stage: build_test
  image: golang:1.8
  artifacts:
    expire_in: 1 week
    paths:
      - build_test/
  script:
   - apt-get update && apt-get install -y --no-install-recommends git
   - mkdir build_test
   - mkdir -p $GOPATH/src/pos-proxy
   - cp -r * $GOPATH/src/pos-proxy
   - cd $GOPATH/src/pos-proxy
   - echo $CI_PIPELINE_ID
   - go get
   - go build -ldflags "-X pos-proxy/config.BuildNumber=${CI_PIPELINE_ID} -X pos-proxy/config.Version=2.0.0 -X pos-proxy/config.VirtualHost=test"
   - $GOPATH/src/pos-proxy/pos-proxy versions
   - cp $GOPATH/src/pos-proxy/pos-proxy $CI_PROJECT_DIR/build_test
   - cp $GOPATH/src/pos-proxy/update.sh $CI_PROJECT_DIR/build_test
   - cp -r templates $GOPATH/src/pos-proxy/pos-proxy $CI_PROJECT_DIR/build_test
  only:
  - master

push_test:
  image: google/cloud-sdk
  stage: push_test
  dependencies:
    - build_test
  script:
  - echo "$GOOGLE_KEY" > key.json
  - gcloud auth activate-service-account --key-file key.json
  - gcloud config set project pos-proxy
  - gsutil cp -r build_test/* gs://pos-proxy/test/${CI_PIPELINE_ID}/
  only:
  - master

build_staging:
  stage: build_staging
  image: golang:1.8
  artifacts:
    expire_in: 1 week
    paths:
      - build_staging/
  script:
   - apt-get update && apt-get install -y --no-install-recommends git
   - mkdir build_staging
   - mkdir -p $GOPATH/src/pos-proxy
   - cp -r * $GOPATH/src/pos-proxy
   - cd $GOPATH/src/pos-proxy
   - echo $CI_PIPELINE_ID
   - go get
   - go build -ldflags "-X pos-proxy/config.BuildNumber=${CI_PIPELINE_ID} -X pos-proxy/config.Version=2.0.0 -X pos-proxy/config.VirtualHost=staging"
   - $GOPATH/src/pos-proxy/pos-proxy versions
   - cp $GOPATH/src/pos-proxy/pos-proxy $CI_PROJECT_DIR/build_staging
   - cp $GOPATH/src/pos-proxy/update.sh $CI_PROJECT_DIR/build_staging
   - cp -r templates $GOPATH/src/pos-proxy/pos-proxy $CI_PROJECT_DIR/build_staging
  only:
  - master
  when: manual

push_staging:
  image: google/cloud-sdk
  stage: push_staging
  dependencies:
    - build_staging
  script:
  - echo "$GOOGLE_KEY" > key.json
  - gcloud auth activate-service-account --key-file key.json
  - gcloud config set project pos-proxy
  - gsutil cp -r build_staging/* gs://pos-proxy/staging/${CI_PIPELINE_ID}/
  only:
  - master
  when: manual

build_manage:
  stage: build_manage
  image: golang:1.8
  artifacts:
    expire_in: 1 week
    paths:
      - build_manage/
  script:
   - apt-get update && apt-get install -y --no-install-recommends git
   - mkdir build_manage
   - mkdir -p $GOPATH/src/pos-proxy
   - cp -r * $GOPATH/src/pos-proxy
   - cd $GOPATH/src/pos-proxy
   - echo $CI_PIPELINE_ID
   - go get
   - go build -ldflags "-X pos-proxy/config.BuildNumber=${CI_PIPELINE_ID} -X pos-proxy/config.Version=2.0.0 -X pos-proxy/config.VirtualHost=manage"
   - $GOPATH/src/pos-proxy/pos-proxy versions
   - cp $GOPATH/src/pos-proxy/pos-proxy $CI_PROJECT_DIR/build_manage
   - cp $GOPATH/src/pos-proxy/update.sh $CI_PROJECT_DIR/build_manage
   - cp -r templates $GOPATH/src/pos-proxy/pos-proxy $CI_PROJECT_DIR/build_manage
  only:
  - master
  when: manual

push_manage:
  image: google/cloud-sdk
  stage: push_manage
  dependencies:
    - build_manage
  script:
  - echo "$GOOGLE_KEY" > key.json
  - gcloud auth activate-service-account --key-file key.json
  - gcloud config set project pos-proxy
  - gsutil cp -r build_manage/* gs://pos-proxy/manage/${CI_PIPELINE_ID}/
  only:
  - master
  when: manual
