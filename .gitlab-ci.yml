stages:
  - build_test
  - push_testing
  - build_staging
  - push_staging
  - build_manage
  - push_manage

build_test:
  stage: build_test
  image: golang:1.8
  script:
   - apt-get update && apt-get install -y --no-install-recommends git
   - mkdir -p $GOPATH/src/pos-proxy
   - cp -r * $GOPATH/src/pos-proxy
   - cd $GOPATH/src/pos-proxy
   - echo $CI_PIPELINE_ID
   - go get
   - go build -ldflags "-X pos-proxy/config.BuildNumber=${CI_PIPELINE_ID} -X pos-proxy/config.Version=2.0.0 -X pox-proxy/config.VirtualHost=test"
   - $GOPATH/src/pos-proxy/pos-proxy versions
  only:
  - master

push_testing:
  image: google/cloud-sdk
  stage: push_testing
  dependencies:
    - build_test
  script:
  - echo "$GOOGLE_KEY" > key.json
  - gcloud auth activate-service-account --key-file key.json
  - gcloud config set project pos-proxy
  - cd $GOPATH/src/pos-proxy
  - gsutil cp pos-proxy gs://pos-proxy/test/${CI_PIPELINE_ID}
  - gsutil cp update.sh gs://pos-proxy/test/${CI_PIPELINE_ID}
  - gsutil cp -r templates/ gs://pos-proxy/test/${CI_PIPELINE_ID}
  only:
  - master

build_staging:
  stage: build_staging
  image: golang:1.8
  script:
   - apt-get update && apt-get install -y --no-install-recommends git
   - mkdir -p $GOPATH/src/pos-proxy
   - cp -r * $GOPATH/src/pos-proxy
   - cd $GOPATH/src/pos-proxy
   - echo $CI_PIPELINE_ID
   - go get
   - go build -ldflags "-X pos-proxy/config.BuildNumber=${CI_PIPELINE_ID} -X pos-proxy/config.Version=2.0.0 -X pox-proxy/config.VirtualHost=staging"
   - $GOPATH/src/pos-proxy/pos-proxy versions
  only:
  - master
  when: manual

push_staging:
  image: google/cloud-sdk
  stage: push_staging
  dependencies:
    - build_staging
  script:
  - echo "$GOOGLE_KEY" > key.json
  - gcloud auth activate-service-account --key-file key.json
  - gcloud config set project pos-proxy
  - cd $GOPATH/src/pos-proxy
  - gsutil cp pos-proxy gs://pos-proxy/staging/${CI_PIPELINE_ID}
  - gsutil cp update.sh gs://pos-proxy/staging/${CI_PIPELINE_ID}
  - gsutil cp -r templates/ gs://pos-proxy/staging/${CI_PIPELINE_ID}
  only:
  - master
  when: manual

build_manage:
  stage: build_manage
  image: golang:1.8
  script:
   - apt-get update && apt-get install -y --no-install-recommends git
   - mkdir -p $GOPATH/src/pos-proxy
   - cp -r * $GOPATH/src/pos-proxy
   - cd $GOPATH/src/pos-proxy
   - echo $CI_PIPELINE_ID
   - go get
   - go build -ldflags "-X pos-proxy/config.BuildNumber=${CI_PIPELINE_ID} -X pos-proxy/config.Version=2.0.0 -X pox-proxy.VirtualHost=manage"
   - $GOPATH/src/pos-proxy/pos-proxy versions
  only:
  - master
  when: manual

push_manage:
  image: google/cloud-sdk
  stage: push_manage
  dependencies:
    - build_manage
  script:
  - echo "$GOOGLE_KEY" > key.json
  - gcloud auth activate-service-account --key-file key.json
  - gcloud config set project pos-proxy
  - cd $GOPATH/src/pos-proxy
  - gsutil cp pos-proxy gs://pos-proxy/manage/${CI_PIPELINE_ID}
  - gsutil cp update.sh gs://pos-proxy/manage/${CI_PIPELINE_ID}
  - gsutil cp -r templates/ gs://pos-proxy/manage/${CI_PIPELINE_ID}
  only:
  - master
  when: manual
